

code = "-[--->+<]>--.[--->+<]>++++.---------.------.-[--->+<]>--.---.>++++++++++."

cells_positive = list(0)//[0,inf]
cells_negative = list(0)//[-inf, -1]

cells_idx =0

p = 0// index of instruction
len = code.len()



while(p < len){
    char = code.get(p)
    if(char == "+"){
        if(cells_idx >= 0){
            cells_positive:cells_idx = cells_positive:cells_idx + 1
            if(cells_positive:cells_idx > 255){
                cells_positive:cells_idx = 0
            }
        }
        elif(cells_idx < 0){
            cells_negative:(-cells_idx-1) = cells_negative:(-cells_idx-1) + 1
            if(cells_positive:(-cells_idx-1) > 255){
                cells_negative:(-cells_idx-1) = 0
            }
        }
    }
    elif(char == "-"){
        if(cells_idx >= 0){
            cells_positive:cells_idx = cells_positive:cells_idx - 1
            if(cells_positive:cells_idx < 0){
                cells_positive:cells_idx = 255
            }
        }
        elif(cells_idx < 0){
            cells_negative:(-cells_idx-1) = cells_negative:(-cells_idx-1) - 1
            if(cells_positive:(-cells_idx-1) < 0){
                cells_negative:(-cells_idx-1) = 255
            }
        }
    }
    elif(char == ">"){
        cells_idx = cells_idx + 1
        if(cells_idx >= cells_positive:(-1)){
            cells_positive.append(0)
        }
    }
    elif(char == "<"){
        cells_idx = cells_idx - 1
        if(-cells_idx - 1 >= cells_negative:(-1)){
            cells_negative.append(0)
        }
    }
    elif(char == "."){
        if(cells_idx >= 0){
            print(chr(cells_positive:cells_idx))
        }
        elif(cells_idx < 0){
            print(chr(cells_negative:(-cells_idx-1)))
        }
    }
    elif(char == "]"){
        value = 0
        if(cells_idx >= 0){
            value = cells_positive:cells_idx
        }
        elif(cells_idx < 0){
            value = cells_negative:(-cells_idx-1)
        }
        if(!(value == 0)){
            count = 0
            opening_idx = -1
            for(i from p-1 to -1){
                
                if(code.get(i) == "]"){
                    count += 1
                }
                if(code.get(i) == "[" & count > 0){
                    count += -1
                }
                elif(code.get(i) == "[" & count == 0){
                    opening_idx = i
                    i = -1
                }
            }
            p = opening_idx
        }

    }
    elif(char == "["){
        value = 0
        if(cells_idx >= 0){
            value = cells_positive:cells_idx
        }
        elif(cells_idx < 0){
            value = cells_negative:(-cells_idx-1)
        }
        if(value == 0){
            count = 0
            opening_idx = -1
            for(i from p+1 to len){
                if(code.get(i) == "["){
                    count += 1
                }
                if(code.get(i) == "]" & count > 0){
                    count += -1
                }
                elif(code.get(i) == "]" & count == 0){
                    opening_idx = i
                    i = len
                }
            }
            p = opening_idx
        }

    }
    elif(char == ","){
        if(cells_idx >= 0){
            cells_positive:cells_idx = asc_val(input())
        }
        elif(cells_idx < 0){
            cells_positive:(-cells_idx-1) = asc_val(input())
        }
    }
    p = p + 1
}